---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import ImageRow from "../../components/ImageRow.astro";
import { ViewTransitions } from "astro:transitions";
import { SITE } from "../../config";
import BaseHead from "../../components/BaseHead.astro";
// // 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("play");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;

const { Content, headings } = await entry.render();

const allPosts = (
  await getCollection("play", ({ data }) => {
    return data.archive !== true;
  })
).sort((a, b) => a.data.publishDate.valueOf() - b.data.publishDate.valueOf());
const title = entry.data.title + ", " + SITE.title;
const description = entry.data.description;
const credits = entry.data.credits ? entry.data.credits : null;
---

<head>
  <ViewTransitions fallback="none" />
  <BaseHead {title} {description} />
</head>
<Layout colors={entry.data.colors}>
  <header class="px-2 mb-4">
    <h1
      class="text-6xl lg:text-8xl text-center mt-2 mb-4"
      transition:name={"title:" + entry.slug}
    >
      {entry.data.title}
    </h1>
    <ImageRow slug={entry.slug} images={entry.data.heroImages} />
  </header>

  <article class="px-2 max-w-prose mx-auto my-3 mt-12 col-2">
    <section class="text-xl my-6">
      <p lang="en" class="text-3xl mb-3">
        {entry.data.description}
      </p>
      <div class="grid grid-cols-2 md:grid-cols-4 text-base gap-4">
        {
          credits &&
            Object.entries(credits).map(([key, value]) => (
              <div>
                <p class="opacity-80">{key}</p>
                <p>{value}</p>
              </div>
            ))
        }
      </div>
    </section>
    <section class="prose">
      <Content />
    </section>
    <footer class="mt-8">
      {
        allPosts.map((post) =>
          post.id !== entry.id ? (
            <a class="directory" href={`/work/${post.slug}`}>
              <p>{post.data.title}</p>
            </a>
          ) : (
            <p class="directory active">
              <span>You Are Here:</span> {post.data.title}
            </p>
          )
        )
      }
    </footer>
  </article>
</Layout>

<style lang="postcss" is:global>
  .directory {
    @apply px-2 py-4 border-b-2 border-theme-dark block;
    @apply text-xl;
  }
  .directory.active {
    @apply py-3 my-1 border-2 border-dashed;
  }
  .prose h1 {
    @apply text-4xl mb-4 mt-6;
  }
  .prose h2 {
    @apply text-2xl mb-4 mt-4;
  }
  .prose h3 {
    @apply text-2xl mb-3;
  }
  .prose h4 {
    @apply text-2xl mb-3;
  }
  .prose p {
    @apply mb-3 leading-7 text-lg;
  }
  </style>
